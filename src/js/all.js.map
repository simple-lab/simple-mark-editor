{"version":3,"file":"all.js","sourceRoot":"","sources":["../ts/MarkdownConverter.ts","../ts/QeustionModal.ts","../ts/R.ts","../ts/main.ts"],"names":[],"mappings":"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","sourcesContent":["namespace SimpleMarkEditor {\r\n    \r\n    export class MarkdownConverter {\r\n        \r\n        constructor() {\r\n            console.log(\"Load::MarkdownConverter\");\r\n            R.id.workSpace.keydown(() => this.keydown_convertTextToMarkdown());\r\n        }\r\n        \r\n        keydown_convertTextToMarkdown(): void {\r\n            let markdown: string = marked(R.id.workSpace.val().toString());\r\n            R.id.translationSpace.html(markdown);\r\n        }\r\n\r\n    }\r\n    \r\n}","namespace SimpleMarkEditor {\r\n    \r\n    export class QuestionModal {\r\n        \r\n        constructor() {\r\n            console.log(\"Load::QuestionModal\");\r\n\r\n            R.id.modalScroll.scroll(this.scrollDetect);\r\n            R.class.questionViewBtn.click(this.toggleQuestion);\r\n        }\r\n\r\n        scrollDetect(): void {\r\n\r\n            let scrollTop: number = R.id.modalScroll.scrollTop();\r\n            \r\n            if(scrollTop > 40) {\r\n                R.id.fixedHeader.show();\r\n            }\r\n            else {\r\n                R.id.fixedHeader.hide();\r\n            }\r\n        }\r\n\r\n        toggleQuestion(): void {\r\n\r\n            let questionViewBtn = $(this);\r\n            let questionContentBox = questionViewBtn.parents('.questionItem').find('.questionContentBox');\r\n            \r\n            questionViewBtn.toggleClass('opened');\r\n            questionContentBox.toggleClass('opened');\r\n\r\n            if(questionViewBtn.hasClass('opened')) {\r\n                questionViewBtn.children().eq(0).text(\"질문 접기\");\r\n            }\r\n            else {\r\n                questionViewBtn.children().eq(0).text(\"질문 보기\");\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n}","namespace SimpleMarkEditor {\r\n\r\n    export class R {\r\n        static id = {\r\n            editor: $(\"#editor\"),\r\n            workSpace: $(\"#workSpace\"),\r\n            converter: $(\"#converter\"),\r\n            translationSpace: $(\"#translationSpace\"),\r\n            modalScroll: $(\"#modalScroll\"),\r\n            popupHeader: $(\"#popupHeader\"),\r\n            fixedHeader: $(\"#fixedHeader\")\r\n        }\r\n\r\n        static class = {\r\n            questionViewBtn: $(\".questionViewBtn\"),\r\n            questionContentBox: $(\".questionContentBox\")\r\n        }\r\n\r\n        static image = {\r\n\r\n        }\r\n\r\n        static string = {\r\n\r\n        }\r\n    }\r\n}","\r\nnamespace SimpleMarkEditor {\r\n\r\n    function startup(): void {\r\n        \r\n        successLog();\r\n\r\n        let mdConverter = new MarkdownConverter();\r\n\r\n        let questionModal = new QuestionModal();\r\n    }\r\n    export var app: any = startup();\r\n\r\n    function successLog(): void {\r\n        console.log(\"## startup-ts\");\r\n    }\r\n}\r\n\r\n"]}